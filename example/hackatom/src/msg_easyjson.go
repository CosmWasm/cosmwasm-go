// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package  src

import (
  "github.com/mailru/easyjson/jwriter"
  "github.com/mailru/easyjson/jlexer"
)

func ( HandleMsg ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* HandleMsg ) UnmarshalJSON([]byte) error { return nil }
func ( HandleMsg ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* HandleMsg ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_HandleMsg *HandleMsg

func ( InitMsg ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* InitMsg ) UnmarshalJSON([]byte) error { return nil }
func ( InitMsg ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* InitMsg ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_InitMsg *InitMsg

func ( MigrateMsg ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* MigrateMsg ) UnmarshalJSON([]byte) error { return nil }
func ( MigrateMsg ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* MigrateMsg ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_MigrateMsg *MigrateMsg

func ( OtherBalance ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* OtherBalance ) UnmarshalJSON([]byte) error { return nil }
func ( OtherBalance ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* OtherBalance ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_OtherBalance *OtherBalance

func ( QueryMsg ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* QueryMsg ) UnmarshalJSON([]byte) error { return nil }
func ( QueryMsg ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* QueryMsg ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_QueryMsg *QueryMsg

func ( Recurse ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Recurse ) UnmarshalJSON([]byte) error { return nil }
func ( Recurse ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Recurse ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Recurse *Recurse

func ( RecurseResponse ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* RecurseResponse ) UnmarshalJSON([]byte) error { return nil }
func ( RecurseResponse ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* RecurseResponse ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_RecurseResponse *RecurseResponse

func ( VerifierResponse ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* VerifierResponse ) UnmarshalJSON([]byte) error { return nil }
func ( VerifierResponse ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* VerifierResponse ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_VerifierResponse *VerifierResponse
