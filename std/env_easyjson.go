// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package  std

import (
  "github.com/mailru/easyjson/jwriter"
  "github.com/mailru/easyjson/jlexer"
)

func ( BlockInfo ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* BlockInfo ) UnmarshalJSON([]byte) error { return nil }
func ( BlockInfo ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* BlockInfo ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_BlockInfo *BlockInfo

func ( ContractInfo ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* ContractInfo ) UnmarshalJSON([]byte) error { return nil }
func ( ContractInfo ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* ContractInfo ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_ContractInfo *ContractInfo

func ( Env ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Env ) UnmarshalJSON([]byte) error { return nil }
func ( Env ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Env ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Env *Env

func ( MessageInfo ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* MessageInfo ) UnmarshalJSON([]byte) error { return nil }
func ( MessageInfo ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* MessageInfo ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_MessageInfo *MessageInfo
